Index: ChatSystem/src/Chat/client/view/registration/RegisterViewModel.java
===================================================================
--- ChatSystem/src/Chat/client/view/registration/RegisterViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/registration/RegisterViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,95 +0,0 @@
-package client.view.register;
-
-import client.model.UserModel;
-import javafx.application.Platform;
-import javafx.beans.property.BooleanProperty;
-import javafx.beans.property.SimpleBooleanProperty;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-import shared.EventType;
-
-import java.beans.PropertyChangeEvent;
-
-public class RegisterViewModel {
-
-    private StringProperty username = new SimpleStringProperty();
-    private StringProperty password = new SimpleStringProperty();
-    private StringProperty confirmPassword = new SimpleStringProperty();
-    private StringProperty registerResponse = new SimpleStringProperty();
-
-    private BooleanProperty registerButtonDisabled = new SimpleBooleanProperty(true);
-
-    private UserModel userModel;
-
-    public RegisterViewModel(UserModel userModel) {
-        this.userModel = userModel;
-        userModel.addPropertyChangeListener(EventType.REGISTER_RESULT.toString(), this::onRegisterResponse);
-        username.addListener((observableValue, oldValue, newValue) -> onInputFieldsUpdated());
-        password.addListener((observableValue, oldValue, newValue) -> onInputFieldsUpdated());
-        confirmPassword.addListener((observableValue, oldValue, newValue) -> onInputFieldsUpdated());
-    }
-
-    private void onInputFieldsUpdated() {
-        boolean disabled = username.get() == null ||
-                username.get().equals("") ||
-                password.get() == null ||
-                password.get().equals("") ||
-                confirmPassword.get() == null ||
-                confirmPassword.get().equals("");
-        registerButtonDisabled.set(disabled);
-    }
-
-    private void onRegisterResponse(PropertyChangeEvent evt) {
-        String result = (String) evt.getNewValue();
-        Platform.runLater(() -> {
-            registerResponse.set(result);
-        });
-    }
-
-    public void registerUser() {
-        String un = username.get();
-        if (un == null || un.equals("")) {
-            registerResponse.set("Username cannot be empty");
-            return;
-        }
-
-        String pw = password.get();
-        if(pw == null) {
-            registerResponse.set("Password cannot be empty");
-            return;
-        }
-
-        if (!pw.equals(confirmPassword.get())) {
-            registerResponse.set("Passwords do not match");
-            return;
-        }
-        userModel.registerUser(un, pw);
-    }
-
-    public StringProperty usernameProperty() {
-        return username;
-    }
-
-    public StringProperty passwordProperty() {
-        return password;
-    }
-
-    public StringProperty confirmPasswordProperty() {
-        return confirmPassword;
-    }
-
-    public BooleanProperty registerButtonDisabledProperty() {
-        return registerButtonDisabled;
-    }
-
-    public StringProperty registerResponseProperty() {
-        return registerResponse;
-    }
-
-    public void clear() {
-        username.set("");
-        password.set("");
-        confirmPassword.set("");
-        registerResponse.set("");
-    }
-}
\ No newline at end of file
Index: ChatSystem/src/Chat/server/RunServer.java
===================================================================
--- ChatSystem/src/Chat/server/RunServer.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/server/RunServer.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,18 +0,0 @@
-package Chat.server;
-
-import Chat.server.model.ServerModel;
-import Chat.server.model.ServerModelManager;
-import Chat.server.network.RMIServerImpl;
-import Chat.shared.networking.RMIServer;
-import java.rmi.AlreadyBoundException;
-import java.rmi.RemoteException;
-import java.rmi.registry.LocateRegistry;
-import java.rmi.registry.Registry;
-
-public class RunServer
-{
-  public static void main(String[] args) throws RemoteException, AlreadyBoundException {
-    RMIServerImpl ss = new RMIServerImpl(new ServerModelManager());
-    ss.startServer();
-  }
-}
Index: ChatSystem/src/Chat/client/network/RMIClient.java
===================================================================
--- ChatSystem/src/Chat/client/network/RMIClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/network/RMIClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,45 +0,0 @@
-package Chat.client.network;
-
-import Chat.shared.networking.ClientCallback;
-import Chat.shared.networking.RMIServer;
-
-import java.rmi.NotBoundException;
-import java.rmi.RemoteException;
-import java.rmi.registry.LocateRegistry;
-import java.rmi.registry.Registry;
-import java.rmi.server.UnicastRemoteObject;
-
-public class RMIClient implements Client, ClientCallback
-{
-  private RMIServer server;
-
-  public RMIClient ()
-  {
-
-  }
-
-  @Override public void startClient()
-  {
-    try
-    {
-      UnicastRemoteObject.exportObject(this, 0);
-      Registry registry = LocateRegistry.getRegistry("localhost", 1099);
-      server = (RMIServer) registry.lookup("Server");
-    }catch (RemoteException | NotBoundException e)
-    {
-      e.printStackTrace();
-    }
-  }
-
-  @Override public void loginUser(String username)
-  {
-    try
-    {
-      server.loginUser(username);
-    }
-    catch (RemoteException e)
-    {
-      e.printStackTrace();
-    }
-  }
-}
Index: ChatSystem/src/Chat/client/view/commonchat/CommonChatController.java
===================================================================
--- ChatSystem/src/Chat/client/view/commonchat/CommonChatController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/commonchat/CommonChatController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,30 +0,0 @@
-package Chat.client.view.commonchat;
-
-import Chat.client.core.ViewHandler;
-import Chat.client.core.ViewModelFactory;
-import Chat.client.view.ViewController;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.TextArea;
-import javafx.scene.control.TextField;
-
-public class CommonChatController implements ViewController
-{
-  @FXML private TextField messageField;
-  @FXML private TextArea commonChatArea;
-
-  private CommonChatViewModel commonChatViewModel;
-  private ViewHandler viewHandler;
-
-  @Override public void init(ViewHandler vh, ViewModelFactory vmf)
-  {
-    viewHandler = vh;
-    commonChatViewModel = vmf.getCommonChatViewModel();
-    //messageField.textProperty().bindBidirectional();
-    //commonChatArea.textProperty().bindBidirectional();
-  }
-
-  public void onSendButton(ActionEvent actionEvent)
-  {
-  }
-}
\ No newline at end of file
Index: ChatSystem/src/Chat/client/view/login/LoginViewModel.java
===================================================================
--- ChatSystem/src/Chat/client/view/login/LoginViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/login/LoginViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,34 +0,0 @@
-package Chat.client.view.login;
-
-import Chat.client.model.login.LoginModel;
-import javafx.beans.property.SimpleStringProperty;
-import javafx.beans.property.StringProperty;
-
-public class LoginViewModel
-{
-  private LoginModel loginModel;
-  private StringProperty username;
-  private StringProperty password;
-
-  public LoginViewModel(LoginModel loginModel)
-  {
-    this.loginModel = loginModel;
-    username = new SimpleStringProperty();
-    password = new SimpleStringProperty();
-
-  }
-  public void loginUser(String username)
-  {
-    loginModel.loginUser(username);
-  }
-
-  public StringProperty usernameProperty()
-  {
-    return username;
-  }
-
-  public StringProperty passwordProperty()
-  {
-    return password;
-  }
-}
Index: ChatSystem/src/Chat/client/RunClient.java
===================================================================
--- ChatSystem/src/Chat/client/RunClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/RunClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,11 +0,0 @@
-package Chat.client;
-
-import javafx.application.Application;
-
-public class RunClient
-{
-  public static void main(String[] args)
-  {
-    Application.launch(StartClient.class);
-  }
-}
Index: ChatSystem/src/Chat/client/view/ViewController.java
===================================================================
--- ChatSystem/src/Chat/client/view/ViewController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/ViewController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,9 +0,0 @@
-package Chat.client.view;
-
-import Chat.client.core.ViewHandler;
-import Chat.client.core.ViewModelFactory;
-
-public interface ViewController
-{
-  void init(ViewHandler vh, ViewModelFactory vmf);
-}
Index: ChatSystem/src/Chat/client/view/login/Login.fxml
===================================================================
--- ChatSystem/src/Chat/client/view/login/Login.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/login/Login.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,33 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.PasswordField?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.Pane?>
-<?import javafx.scene.text.Font?>
-
-<AnchorPane prefHeight="390.0" prefWidth="483.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Chat.client.view.login.LoginController">
-   <children>
-      <Pane prefHeight="400.0" prefWidth="474.0">
-         <children>
-            <Button layoutX="198.0" layoutY="200.0" mnemonicParsing="false" onAction="#onLoginButton" prefHeight="35.0" prefWidth="83.0" text="Log in">
-               <font>
-                  <Font size="18.0" />
-               </font>
-            </Button>
-            <Label layoutX="172.0" layoutY="29.0" text="Chat System">
-               <font>
-                  <Font size="24.0" />
-               </font>
-            </Label>
-            <Button layoutX="187.0" layoutY="270.0" mnemonicParsing="false" prefHeight="25.0" prefWidth="104.0" text="Enter as guest" />
-            <Button layoutX="186.0" layoutY="337.0" mnemonicParsing="false" prefHeight="35.0" prefWidth="104.0" text="Create account" />
-            <Label layoutX="162.0" layoutY="307.0" text="Do not have an account yet?" />
-            <PasswordField fx:id="passwordField" layoutX="163.0" layoutY="147.0" />
-            <TextField fx:id="usernameField" layoutX="163.0" layoutY="99.0" />
-         </children>
-      </Pane>
-   </children>
-</AnchorPane>
Index: ChatSystem/src/Chat/client/core/ViewModelFactory.java
===================================================================
--- ChatSystem/src/Chat/client/core/ViewModelFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/core/ViewModelFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,34 +0,0 @@
-package Chat.client.core;
-
-import Chat.client.view.commonchat.CommonChatViewModel;
-import Chat.client.view.login.LoginViewModel;
-
-public class ViewModelFactory
-{
-  private ModelFactory modelFactory;
-  private LoginViewModel loginViewModel;
-  private CommonChatViewModel commonChatViewModel;
-
-  public ViewModelFactory(ModelFactory mf)
-  {
-    modelFactory = mf;
-  }
-
-  public LoginViewModel getLoginViewModel()
-  {
-    if (loginViewModel == null)
-    {
-      loginViewModel = new LoginViewModel(modelFactory.getLoginModel());
-    }
-    return loginViewModel;
-  }
-
-  public CommonChatViewModel getCommonChatViewModel()
-  {
-    if (commonChatViewModel == null)
-    {
-      commonChatViewModel = new CommonChatViewModel();
-    }
-    return commonChatViewModel;
-  }
-}
Index: ChatSystem/src/DAO/DAO.java
===================================================================
--- ChatSystem/src/DAO/DAO.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/DAO/DAO.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,12 +0,0 @@
-package DAO;
-
-import java.sql.SQLException;
-
-public interface DAO
-{
-  void create(String name, int age) throws SQLException;
-  void read(String name) throws SQLException;
-  void updateName(String name) throws SQLException;
-  void updateAge(int age) throws SQLException;
-  void delete(String name) throws SQLException;
-}
Index: ChatSystem/src/Chat/client/view/commonchat/CommonChat.fxml
===================================================================
--- ChatSystem/src/Chat/client/view/commonchat/CommonChat.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/commonchat/CommonChat.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,83 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.ListView?>
-<?import javafx.scene.control.Menu?>
-<?import javafx.scene.control.MenuBar?>
-<?import javafx.scene.control.MenuItem?>
-<?import javafx.scene.control.SeparatorMenuItem?>
-<?import javafx.scene.control.SplitPane?>
-<?import javafx.scene.control.TextArea?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.VBox?>
-<?import javafx.scene.text.Font?>
-
-<VBox prefHeight="400.0" prefWidth="640.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1" fx:controller="Chat.client.view.commonchat.CommonChatController">
-   <children>
-      <MenuBar VBox.vgrow="NEVER">
-         <menus>
-            <Menu mnemonicParsing="false" text="File">
-               <items>
-                  <MenuItem mnemonicParsing="false" text="New" />
-                  <MenuItem mnemonicParsing="false" text="Open…" />
-                  <Menu mnemonicParsing="false" text="Open Recent" />
-                  <SeparatorMenuItem mnemonicParsing="false" />
-                  <MenuItem mnemonicParsing="false" text="Close" />
-                  <MenuItem mnemonicParsing="false" text="Save" />
-                  <MenuItem mnemonicParsing="false" text="Save As…" />
-                  <MenuItem mnemonicParsing="false" text="Revert" />
-                  <SeparatorMenuItem mnemonicParsing="false" />
-                  <MenuItem mnemonicParsing="false" text="Preferences…" />
-                  <SeparatorMenuItem mnemonicParsing="false" />
-                  <MenuItem mnemonicParsing="false" text="Quit" />
-               </items>
-            </Menu>
-            <Menu mnemonicParsing="false" text="Edit">
-               <items>
-                  <MenuItem mnemonicParsing="false" text="Undo" />
-                  <MenuItem mnemonicParsing="false" text="Redo" />
-                  <SeparatorMenuItem mnemonicParsing="false" />
-                  <MenuItem mnemonicParsing="false" text="Cut" />
-                  <MenuItem mnemonicParsing="false" text="Copy" />
-                  <MenuItem mnemonicParsing="false" text="Paste" />
-                  <MenuItem mnemonicParsing="false" text="Delete" />
-                  <SeparatorMenuItem mnemonicParsing="false" />
-                  <MenuItem mnemonicParsing="false" text="Select All" />
-                  <MenuItem mnemonicParsing="false" text="Unselect All" />
-               </items>
-            </Menu>
-            <Menu mnemonicParsing="false" text="Help">
-               <items>
-                  <MenuItem mnemonicParsing="false" text="About MyHelloApp" />
-               </items>
-            </Menu>
-         </menus>
-      </MenuBar>
-      <AnchorPane maxHeight="-1.0" maxWidth="-1.0" prefHeight="-1.0" prefWidth="-1.0" VBox.vgrow="ALWAYS">
-         <children>
-            <Label alignment="CENTER" layoutX="155.0" layoutY="177.0" style="&#10;" text="Drag components from Library here…" textAlignment="CENTER" textFill="#9f9f9f" wrapText="false">
-               <font>
-                  <Font size="18.0" />
-               </font>
-            </Label>
-            <SplitPane dividerPositions="0.7241379310344828" layoutY="-1.0" prefHeight="372.0" prefWidth="640.0">
-               <items>
-                  <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="160.0" prefWidth="100.0">
-                     <children>
-                        <TextArea fx:id="commonChatArea" prefHeight="334.0" prefWidth="459.0" />
-                        <TextField fx:id="messageField" layoutY="343.0" prefHeight="16.0" prefWidth="349.0" />
-                        <Button layoutX="381.0" layoutY="343.0" mnemonicParsing="false" onAction="#onSendButton" text="Send" />
-                     </children></AnchorPane>
-                  <AnchorPane minHeight="0.0" minWidth="0.0" prefHeight="160.0" prefWidth="100.0">
-                     <children>
-                        <ListView layoutX="-1.0" layoutY="27.0" prefHeight="308.0" prefWidth="174.0" />
-                        <Label layoutX="54.0" layoutY="5.0" text="Active Users" />
-                     </children></AnchorPane>
-               </items>
-            </SplitPane>
-         </children>
-      </AnchorPane>
-   </children>
-</VBox>
Index: ChatSystem/src/Chat/client/model/login/LoginModel.java
===================================================================
--- ChatSystem/src/Chat/client/model/login/LoginModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/model/login/LoginModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,6 +0,0 @@
-package Chat.client.model.login;
-
-public interface LoginModel
-{
-  void loginUser(String username);
-}
Index: ChatSystem/src/Chat/client/core/ViewHandler.java
===================================================================
--- ChatSystem/src/Chat/client/core/ViewHandler.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/core/ViewHandler.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,69 +0,0 @@
-package Chat.client.core;
-
-import Chat.client.view.ViewController;
-import javafx.fxml.FXMLLoader;
-import javafx.scene.Parent;
-import javafx.scene.Scene;
-import javafx.stage.Stage;
-
-import java.io.IOException;
-
-public class ViewHandler
-{
-  private Scene loginScene;
-  private Scene commonChatScene;
-  private Stage stage;
-  private ViewModelFactory viewModelFactory;
-
-  public ViewHandler(ViewModelFactory viewModelFactory)
-  {
-    this.viewModelFactory = viewModelFactory;
-  }
-
-  public void start()
-  {
-    stage = new Stage();
-    openLogin();
-  }
-
-  public void openLogin()
-  {
-    if(loginScene == null){
-      try {
-        Parent root = loadFXML("../view/login/Login.fxml");
-        stage.setTitle("Login");
-        loginScene = new Scene(root);
-      } catch (IOException e) {
-        e.printStackTrace();
-      }
-    }
-    stage.setScene(loginScene);
-    stage.show();
-  }
-
-  public void openCommonChat()
-  {
-    if(commonChatScene == null){
-      try {
-        Parent root = loadFXML("../view/commonchat/CommonChat.fxml");
-        stage.setTitle("CommomChat");
-        commonChatScene = new Scene(root);
-      } catch (IOException e) {
-        e.printStackTrace();
-      }
-    }
-    stage.setScene(commonChatScene);
-    stage.show();
-  }
-
-  private Parent loadFXML(String path) throws IOException
-  {
-    FXMLLoader loader = new FXMLLoader();
-    loader.setLocation(getClass().getResource(path));
-    Parent root = loader.load();
-
-    ViewController ctrl = loader.getController();
-    ctrl.init(this,viewModelFactory);
-    return root;
-  }
-}
Index: ChatSystem/src/Chat/client/network/Client.java
===================================================================
--- ChatSystem/src/Chat/client/network/Client.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/network/Client.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,7 +0,0 @@
-package Chat.client.network;
-
-public interface Client
-{
-  void startClient();
-  void loginUser(String username);
-}
Index: ChatSystem/src/Chat/server/model/ServerModelManager.java
===================================================================
--- ChatSystem/src/Chat/server/model/ServerModelManager.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/server/model/ServerModelManager.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,29 +0,0 @@
-package Chat.server.model;
-
-import DAO.DAO;
-import DAO.DAOImpl;
-
-import java.sql.SQLException;
-import java.util.ArrayList;
-
-public class ServerModelManager implements ServerModel
-{
-  private ArrayList<String> users;
-  private DAO database = DAOImpl.getInstance();
-
-  public ServerModelManager()
-  {
-    users = new ArrayList<String>();
-  }
-  
-  @Override public void loginUser(String username)
-  {
-    try{
-      database.read(username);
-    }
-    catch (SQLException throwables)
-    {
-      throwables.printStackTrace();
-    }
-  }
-}
Index: ChatSystem/src/Chat/server/model/ServerModel.java
===================================================================
--- ChatSystem/src/Chat/server/model/ServerModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/server/model/ServerModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,6 +0,0 @@
-package Chat.server.model;
-
-public interface ServerModel
-{
-  void loginUser(String username);
-}
Index: ChatSystem/src/Chat/client/StartClient.java
===================================================================
--- ChatSystem/src/Chat/client/StartClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/StartClient.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,20 +0,0 @@
-package Chat.client;
-
-import Chat.client.core.ClientFactory;
-import Chat.client.core.ModelFactory;
-import Chat.client.core.ViewHandler;
-import Chat.client.core.ViewModelFactory;
-import javafx.application.Application;
-import javafx.stage.Stage;
-
-public class StartClient extends Application
-{
-  @Override public void start(Stage stage) throws Exception
-  {
-    ClientFactory cf = new ClientFactory();
-    ModelFactory mf = new ModelFactory(cf);
-    ViewModelFactory vmf = new ViewModelFactory(mf);
-    ViewHandler vh = new ViewHandler(vmf);
-    vh.start();
-  }
-}
Index: ChatSystem/src/Chat/server/network/RMIServerImpl.java
===================================================================
--- ChatSystem/src/Chat/server/network/RMIServerImpl.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/server/network/RMIServerImpl.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,34 +0,0 @@
-package Chat.server.network;
-
-import Chat.server.model.ServerModel;
-import Chat.shared.networking.ClientCallback;
-import Chat.shared.networking.RMIServer;
-
-import java.rmi.AlreadyBoundException;
-import java.rmi.RemoteException;
-
-import java.rmi.registry.LocateRegistry;
-import java.rmi.registry.Registry;
-import java.rmi.server.UnicastRemoteObject;
-
-public class RMIServerImpl implements RMIServer
-{
-  private ServerModel serverModel;
-
-  public RMIServerImpl(ServerModel serverModel) throws RemoteException
-  {
-    UnicastRemoteObject.exportObject(this, 0);
-    this.serverModel = serverModel;
-  }
-
-  public void startServer() throws RemoteException, AlreadyBoundException
-  {
-    Registry registry = LocateRegistry.createRegistry(1099);
-    registry.bind("Server", this);
-  }
-
-  @Override public void loginUser(String username)
-  {
-    serverModel.loginUser(username);
-  }
-}
Index: ChatSystem/src/DAO/StartDB.java
===================================================================
--- ChatSystem/src/DAO/StartDB.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/DAO/StartDB.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,19 +0,0 @@
-package DAO;
-
-import java.sql.SQLException;
-
-public class StartDB
-{
-  public static void main(String[] args)
-  {
-    String name = "Alex";
-    int age = 20;
-    try{
-      DAOImpl.getInstance().create(name, age);
-    }
-    catch (SQLException throwables)
-    {
-      throwables.printStackTrace();
-    }
-  }
-}
Index: ChatSystem/src/Chat/client/model/login/LoginModelManager.java
===================================================================
--- ChatSystem/src/Chat/client/model/login/LoginModelManager.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/model/login/LoginModelManager.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,19 +0,0 @@
-package Chat.client.model.login;
-
-import Chat.client.network.Client;
-
-public class LoginModelManager implements LoginModel
-{
-  private Client client;
-
-  public LoginModelManager(Client client)
-  {
-    this.client = client;
-    client.startClient();
-  }
-
-  @Override public void loginUser(String username)
-  {
-    client.loginUser(username);
-  }
-}
Index: ChatSystem/src/Chat/client/view/login/LoginController.java
===================================================================
--- ChatSystem/src/Chat/client/view/login/LoginController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/login/LoginController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,31 +0,0 @@
-package Chat.client.view.login;
-
-import Chat.client.core.ViewHandler;
-import Chat.client.core.ViewModelFactory;
-import Chat.client.view.ViewController;
-import javafx.event.ActionEvent;
-import javafx.fxml.FXML;
-import javafx.scene.control.PasswordField;
-import javafx.scene.control.*;
-
-public class LoginController implements ViewController
-{
-  @FXML private TextField usernameField;
-  @FXML private PasswordField passwordField;
-
-  private LoginViewModel lvm;
-  private ViewHandler vh;
-
-  @Override public void init(ViewHandler vh, ViewModelFactory vmf)
-  {
-    this.vh = vh;
-    lvm = vmf.getLoginViewModel();
-    usernameField.textProperty().bindBidirectional(lvm.usernameProperty());
-    passwordField.textProperty().bindBidirectional(lvm.passwordProperty());
-  }
-
-  public void onLoginButton(ActionEvent actionEvent)
-  {
-    lvm.loginUser(usernameField.getText());
-  }
-}
Index: ChatSystem/src/Chat/shared/networking/ClientCallback.java
===================================================================
--- ChatSystem/src/Chat/shared/networking/ClientCallback.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/shared/networking/ClientCallback.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,9 +0,0 @@
-package Chat.shared.networking;
-
-import java.rmi.Remote;
-import java.rmi.RemoteException;
-
-public interface ClientCallback extends Remote
-{
-
-}
Index: ChatSystem/src/DAO/DAOImpl.java
===================================================================
--- ChatSystem/src/DAO/DAOImpl.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/DAO/DAOImpl.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,76 +0,0 @@
-package DAO;
-
-import java.sql.*;
-
-public class DAOImpl implements DAO
-{
-  private static DAOImpl instance;
-
-  private DAOImpl()
-  {
-    try
-    {
-      DriverManager.registerDriver(new org.postgresql.Driver());
-    }
-    catch (SQLException throwables)
-    {
-      throwables.printStackTrace();
-    }
-  }
-
-  public static synchronized DAOImpl getInstance()
-  {
-    if(instance == null)
-    {
-      instance = new DAOImpl();
-    }
-    return instance;
-  }
-
-  private Connection getConnection() throws SQLException
-  {
-    return DriverManager.getConnection("jdbc:postgresql://localhost:5432/postgres?currentSchema=test", "postgres", "293150");
-  }
-
-  @Override public void create(String name, int age) throws SQLException
-  {
-    try(Connection connection = getConnection()){
-      PreparedStatement statement = connection.prepareStatement(
-          "insert into persontest(name, age) values (?, ?);");
-      statement.setString(1, name);
-      statement.setInt(2, age);
-      statement.executeUpdate();
-    }
-  }
-
-  @Override public void read(String name) throws SQLException
-  {
-    try(Connection connection = getConnection()) {
-      PreparedStatement statement = connection.prepareStatement("SELECT * FROM registereduser WHERE username = ?");
-      statement.setString(1, name);
-      ResultSet resultSet = statement.executeQuery();
-      if (resultSet.next()) {
-        String username = resultSet.getString("username");
-        String password = resultSet.getString("password");
-        System.out.println(username + " " + password);
-      } else {
-        System.out.println("Account does not exist");
-      }
-    }
-  }
-
-  @Override public void updateName(String name) throws SQLException
-  {
-
-  }
-
-  @Override public void updateAge(int age) throws SQLException
-  {
-
-  }
-
-  @Override public void delete(String name) throws SQLException
-  {
-
-  }
-}
Index: ChatSystem/src/Chat/client/core/ModelFactory.java
===================================================================
--- ChatSystem/src/Chat/client/core/ModelFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/core/ModelFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,25 +0,0 @@
-package Chat.client.core;
-
-import Chat.client.model.login.LoginModel;
-import Chat.client.model.login.LoginModelManager;
-import Chat.client.network.Client;
-
-public class ModelFactory
-{
-  private ClientFactory clientFactory;
-  private LoginModel loginModel;
-
-  public ModelFactory(ClientFactory clientFactory)
-  {
-    this.clientFactory = clientFactory;
-  }
-
-  public LoginModel getLoginModel()
-  {
-    if(loginModel == null)
-    {
-      loginModel = new LoginModelManager(clientFactory.getClient());
-    }
-    return loginModel;
-  }
-}
Index: ChatSystem/src/Chat/client/view/commonchat/CommonChatViewModel.java
===================================================================
--- ChatSystem/src/Chat/client/view/commonchat/CommonChatViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/commonchat/CommonChatViewModel.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,6 +0,0 @@
-package Chat.client.view.commonchat;
-
-public class CommonChatViewModel
-{
-
-}
\ No newline at end of file
Index: ChatSystem/src/Chat/shared/networking/RMIServer.java
===================================================================
--- ChatSystem/src/Chat/shared/networking/RMIServer.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/shared/networking/RMIServer.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,9 +0,0 @@
-package Chat.shared.networking;
-
-import java.rmi.Remote;
-import java.rmi.RemoteException;
-
-public interface RMIServer extends Remote
-{
-  void loginUser(String username) throws RemoteException;
-}
Index: ChatSystem/src/Chat/client/view/registration/RegistrationController.java
===================================================================
--- ChatSystem/src/Chat/client/view/registration/RegistrationController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/registration/RegistrationController.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,58 +0,0 @@
-package Chat.client.view.registration;
-import javafx.fxml.FXML;
-import javafx.scene.control.Button;
-import javafx.scene.control.PasswordField;
-import javafx.scene.control.TextField;
-
-public class RegistrationController {
-
-    @FXML
-    private PasswordField password;
-
-    @FXML
-    private PasswordField passwordrep;
-
-    @FXML
-    private TextField userName;
-
-    @FXML
-    private Button resetButton;
-
-    @FXML
-    private Button registerButton;
-
-    @FXML
-    private Button cancelButton;
-    
-    private RegistrationViewModel rvm;
-    private ViewHandler vh;
-
-    public void init(ViewHandler vh, RegistrationViewModel rvm) {
-        this.RegistrationViewModel = rvm;
-        this.ViewHandler = vh;
-        userName.textProperty().bindBidirectional(rvm.usernameProperty());
-        password.textProperty().bindBidirectional(rvm.passwordProperty());
-        confirmPassword.textProperty().bindBidirectional(rvm.confirmPasswordProperty());
-        errorLabel.textProperty().bind(rvm.registerResponseProperty());
-        registerButton.disableProperty().bind(rvm.registerButtonDisabledProperty());
-        rvm.registerResponseProperty().addListener((observableValue, oldValue, newValue) -> onRegisterResult(newValue));
-    }
-
-    @FXML
-    void onCancel(ActionEvent event) {
-        rvm.clear();
-        vh.openLogin();
-    }
-
-    @FXML
-    void createAccount(ActionEvent event) {
-        rvm.registerUser();
-    }
-
-    @FXML
-    void resetData(ActionEvent event) {
-
-    }
-
-}
-
Index: ChatSystem/src/Chat/client/core/ClientFactory.java
===================================================================
--- ChatSystem/src/Chat/client/core/ClientFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/core/ClientFactory.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,16 +0,0 @@
-package Chat.client.core;
-
-import Chat.client.network.Client;
-import Chat.client.network.RMIClient;
-
-public class ClientFactory
-{
-  private Client client;
-
-  public Client getClient() {
-    if(client == null) {
-      client = new RMIClient();
-    }
-    return client;
-  }
-}
Index: ChatSystem/src/User.java
===================================================================
--- ChatSystem/src/User.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/User.java	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,3 +0,0 @@
-public class User
-{
-}
Index: ChatSystem/src/Chat/client/view/registration/Registration.fxml
===================================================================
--- ChatSystem/src/Chat/client/view/registration/Registration.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
+++ ChatSystem/src/Chat/client/view/registration/Registration.fxml	(revision d3f2e63030be8693040d5440845cb3ca4fca9bc1)
@@ -1,77 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-
-<?import javafx.scene.control.Button?>
-<?import javafx.scene.control.Label?>
-<?import javafx.scene.control.Menu?>
-<?import javafx.scene.control.MenuBar?>
-<?import javafx.scene.control.MenuItem?>
-<?import javafx.scene.control.PasswordField?>
-<?import javafx.scene.control.SeparatorMenuItem?>
-<?import javafx.scene.control.TextField?>
-<?import javafx.scene.layout.AnchorPane?>
-<?import javafx.scene.layout.VBox?>
-<?import javafx.scene.text.Font?>
-
-<VBox prefHeight="400.0" prefWidth="640.0" xmlns="http://javafx.com/javafx/11.0.1" xmlns:fx="http://javafx.com/fxml/1">
-  <children>
-    <MenuBar VBox.vgrow="NEVER">
-      <menus>
-        <Menu mnemonicParsing="false" text="File">
-          <items>
-            <MenuItem mnemonicParsing="false" text="New" />
-            <MenuItem mnemonicParsing="false" text="Open…" />
-            <Menu mnemonicParsing="false" text="Open Recent" />
-            <SeparatorMenuItem mnemonicParsing="false" />
-            <MenuItem mnemonicParsing="false" text="Close" />
-            <MenuItem mnemonicParsing="false" text="Save" />
-            <MenuItem mnemonicParsing="false" text="Save As…" />
-            <MenuItem mnemonicParsing="false" text="Revert" />
-            <SeparatorMenuItem mnemonicParsing="false" />
-            <MenuItem mnemonicParsing="false" text="Preferences…" />
-            <SeparatorMenuItem mnemonicParsing="false" />
-            <MenuItem mnemonicParsing="false" text="Quit" />
-          </items>
-        </Menu>
-        <Menu mnemonicParsing="false" text="Edit">
-          <items>
-            <MenuItem mnemonicParsing="false" text="Undo" />
-            <MenuItem mnemonicParsing="false" text="Redo" />
-            <SeparatorMenuItem mnemonicParsing="false" />
-            <MenuItem mnemonicParsing="false" text="Cut" />
-            <MenuItem mnemonicParsing="false" text="Copy" />
-            <MenuItem mnemonicParsing="false" text="Paste" />
-            <MenuItem mnemonicParsing="false" text="Delete" />
-            <SeparatorMenuItem mnemonicParsing="false" />
-            <MenuItem mnemonicParsing="false" text="Select All" />
-            <MenuItem mnemonicParsing="false" text="Unselect All" />
-          </items>
-        </Menu>
-        <Menu mnemonicParsing="false" text="Help">
-          <items>
-            <MenuItem mnemonicParsing="false" text="About MyHelloApp" />
-          </items>
-        </Menu>
-      </menus>
-    </MenuBar>
-    <AnchorPane maxHeight="-1.0" maxWidth="-1.0" prefHeight="-1.0" prefWidth="-1.0" VBox.vgrow="ALWAYS">
-         <children>
-            <PasswordField fx:id="password" layoutX="194.0" layoutY="122.0" prefHeight="27.0" prefWidth="389.0" />
-            <TextField fx:id="userName" layoutX="194.0" layoutY="80.0" prefHeight="27.0" prefWidth="389.0" />
-            <Label layoutX="139.0" layoutY="210.0" text="By registration you accept our rulebook that can be found in 'About'" />
-            <Label layoutX="14.0" layoutY="85.0" text="Username (max. 128 char)" />
-            <Label layoutX="14.0" layoutY="128.0" text="Password (4-24 char)" />
-            <Button fx:id="resetButton" layoutX="274.0" layoutY="288.0" mnemonicParsing="false" onAction="#resetData" prefHeight="27.0" prefWidth="92.0" text="Reset" />
-            <Button fx:id="registerButton" layoutX="274.0" layoutY="245.0" mnemonicParsing="false" onAction="#createAccount" prefHeight="27.0" prefWidth="92.0" text="Register" />
-            <Button fx:id="cancelButton" layoutX="274.0" layoutY="330.0" mnemonicParsing="false" onAction="#backToLogin" prefHeight="27.0" prefWidth="92.0" text="Cancel" />
-            <Label layoutX="305.0" layoutY="29.0" />
-            <Label layoutX="200.0" layoutY="18.0" text="Welcome to Chat!">
-               <font>
-                  <Font size="32.0" />
-               </font>
-            </Label>
-            <PasswordField fx:id="passwordrep" layoutX="194.0" layoutY="159.0" prefHeight="27.0" prefWidth="389.0" />
-            <Label layoutX="14.0" layoutY="164.0" text="Repeat password" />
-         </children>
-    </AnchorPane>
-  </children>
-</VBox>
Index: Chat/client/model/registration/RegistrationModelManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Chat/client/model/registration/RegistrationModelManager.java	(date 1595708185558)
+++ Chat/client/model/registration/RegistrationModelManager.java	(date 1595708185558)
@@ -0,0 +1,19 @@
+package Chat.client.model.registration;
+import Chat.client.network.Client;
+
+public class RegistrationModelManager implements RegistrationModel{
+
+    private Client client;
+
+    public RegistrationModelManager(Client client)
+    {
+        this.client = client;
+        client.startClient();
+    }
+
+
+    @Override
+    public void createAccount(String username, String password, String passredo) {
+
+    }
+}
Index: Chat/client/model/registration/RegistrationModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Chat/client/model/registration/RegistrationModel.java	(date 1595706820638)
+++ Chat/client/model/registration/RegistrationModel.java	(date 1595706820638)
@@ -0,0 +1,5 @@
+package Chat.client.model.registration;
+
+public interface RegistrationModel {
+    void createAccount (String username, String password, String passredo);
+}
Index: Chat/client/model/registration/PropertyChangeSubject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Chat/client/model/registration/PropertyChangeSubject.java	(date 1595757926985)
+++ Chat/client/model/registration/PropertyChangeSubject.java	(date 1595757926985)
@@ -0,0 +1,10 @@
+package Chat.client.model.registration;
+
+import java.beans.PropertyChangeListener;
+
+public interface PropertyChangeSubject {
+    public void addPropertyChangeListener(String eventName, PropertyChangeListener listener);
+    public void addPropertyChangeListener(PropertyChangeListener listener);
+    public void removePropertyChangeListener(String eventName, PropertyChangeListener listener);
+    public void removePropertyChangeListener(PropertyChangeListener listener);
+}
Index: Chat/client/model/user/UserModelManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Chat/client/model/user/UserModelManager.java	(date 1595757698388)
+++ Chat/client/model/user/UserModelManager.java	(date 1595757698388)
@@ -0,0 +1,20 @@
+package Chat.client.model.user;
+
+public class UserModelManager implements UserModel {
+
+
+    @Override
+    public void registerUser(String un, String pw) {
+
+    }
+
+    @Override
+    public void message(String message) {
+
+    }
+
+    @Override
+    public void addFriend(Object object) {
+
+    }
+}
Index: Chat/client/model/user/UserModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Chat/client/model/user/UserModel.java	(date 1595711418267)
+++ Chat/client/model/user/UserModel.java	(date 1595711418267)
@@ -0,0 +1,7 @@
+package Chat.client.model.user;
+
+public interface UserModel {
+    void registerUser(String un, String pw);
+    void message (String message);
+    void addFriend(Object object);
+}
diff --git ChatSystem/src/test.java ChatSystem/src/test.java
deleted file mode 100644
